package enum

import (
	"fmt"
	"io"
	"strconv"
)

type ImageFit string

// Please do not edit this file, consider making a new one with appending _edit in the namefile
// This file will be automatically regenerated by bendt-generator
// Changes in this File may be unsaved or replaced when regenerated

const (
	ImageFitContain ImageFit = "CONTAIN" //maintain height
	ImageFitCover   ImageFit = "COVER" //maintain width
	ImageFitFill    ImageFit = "FILL" //forced width & height
)

var AllImageFit = []ImageFit{
	ImageFitContain,
	ImageFitCover,
	ImageFitFill,
}

func (e ImageFit) IsValid() bool {
	switch e {
	case ImageFitContain, ImageFitCover, ImageFitFill:
		return true
	}
	return false
}

func (e ImageFit) String() string {
	return string(e)
}

func (e *ImageFit) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ImageFit(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ImageFit", str)
	}
	return nil
}

func (e ImageFit) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
